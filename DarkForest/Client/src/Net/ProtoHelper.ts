//<auto-generated>
//	Generated by proto generator.  DO NOT EDIT!
//</auto-generated>
//ReSharper disable CheckNamespace
import { Protos } from "../libs/protos";

export class ProtoCreator {
	private static readonly _TYPE2ID = new Map<new () => any, Protos.MsgID>([
		[Protos.G_AskPing, <Protos.MsgID>10],
		[Protos.G_AskPingRet, <Protos.MsgID>11],
		[Protos.GC2LS_AskRegister, <Protos.MsgID>100],
		[Protos.GC2LS_AskLogin, <Protos.MsgID>101],
		[Protos.GC2GS_AskLogin, <Protos.MsgID>200],
		[Protos.GC2GS_KeepAlive, <Protos.MsgID>201],
		[Protos.LS2GC_GSInfo, <Protos.MsgID>300],
		[Protos.LS2GC_AskRegRet, <Protos.MsgID>301],
		[Protos.LS2GC_AskLoginRet, <Protos.MsgID>302],
		[Protos.LS2CS_GCLogin, <Protos.MsgID>400],
		[Protos.LS2DB_QueryAccount, <Protos.MsgID>500],
		[Protos.LS2DB_QueryLogin, <Protos.MsgID>501],
		[Protos.LS2DB_Exec, <Protos.MsgID>502],
		[Protos.GS2CS_ReportState, <Protos.MsgID>600],
		[Protos.GS2CS_GCAskLogin, <Protos.MsgID>601],
		[Protos.GS2CS_GCLost, <Protos.MsgID>602],
		[Protos.GS2GC_LoginRet, <Protos.MsgID>700],
		[Protos.CS2LS_GSInfos, <Protos.MsgID>800],
		[Protos.CS2LS_GSInfo, <Protos.MsgID>801],
		[Protos.CS2LS_GSLost, <Protos.MsgID>802],
		[Protos.CS2LS_GCLoginRet, <Protos.MsgID>803],
		[Protos.CS2GS_GCLoginRet, <Protos.MsgID>900],
		[Protos.DB2LS_QueryAccountRet, <Protos.MsgID>20000],
		[Protos.DB2LS_QueryLoginRet, <Protos.MsgID>20001],
		[Protos.DB2LS_ExecRet, <Protos.MsgID>20002],
	]);

	private static readonly _ID2TYPE = new Map<Protos.MsgID, new () => any>([
		[<Protos.MsgID>10, Protos.G_AskPing],
		[<Protos.MsgID>11, Protos.G_AskPingRet],
		[<Protos.MsgID>100, Protos.GC2LS_AskRegister],
		[<Protos.MsgID>101, Protos.GC2LS_AskLogin],
		[<Protos.MsgID>200, Protos.GC2GS_AskLogin],
		[<Protos.MsgID>201, Protos.GC2GS_KeepAlive],
		[<Protos.MsgID>300, Protos.LS2GC_GSInfo],
		[<Protos.MsgID>301, Protos.LS2GC_AskRegRet],
		[<Protos.MsgID>302, Protos.LS2GC_AskLoginRet],
		[<Protos.MsgID>400, Protos.LS2CS_GCLogin],
		[<Protos.MsgID>500, Protos.LS2DB_QueryAccount],
		[<Protos.MsgID>501, Protos.LS2DB_QueryLogin],
		[<Protos.MsgID>502, Protos.LS2DB_Exec],
		[<Protos.MsgID>600, Protos.GS2CS_ReportState],
		[<Protos.MsgID>601, Protos.GS2CS_GCAskLogin],
		[<Protos.MsgID>602, Protos.GS2CS_GCLost],
		[<Protos.MsgID>700, Protos.GS2GC_LoginRet],
		[<Protos.MsgID>800, Protos.CS2LS_GSInfos],
		[<Protos.MsgID>801, Protos.CS2LS_GSInfo],
		[<Protos.MsgID>802, Protos.CS2LS_GSLost],
		[<Protos.MsgID>803, Protos.CS2LS_GCLoginRet],
		[<Protos.MsgID>900, Protos.CS2GS_GCLoginRet],
		[<Protos.MsgID>20000, Protos.DB2LS_QueryAccountRet],
		[<Protos.MsgID>20001, Protos.DB2LS_QueryLoginRet],
		[<Protos.MsgID>20002, Protos.DB2LS_ExecRet],
	]);

	public static Q_G_AskPing(): Protos.G_AskPing {
		let msg = new Protos.G_AskPing();
		msg.opts = new Protos.MsgOpts();
		msg.opts.flag |= Protos.MsgOpts.Flag.RPC;
		return msg;
	}

	public static Q_G_AskPingRet(): Protos.G_AskPingRet {
		let msg = new Protos.G_AskPingRet();
		msg.opts = new Protos.MsgOpts();
		return msg;
	}

	public static Q_GC2LS_AskRegister(): Protos.GC2LS_AskRegister {
		let msg = new Protos.GC2LS_AskRegister();
		msg.opts = new Protos.MsgOpts();
		msg.opts.flag |= Protos.MsgOpts.Flag.RPC;
		return msg;
	}

	public static Q_GC2LS_AskLogin(): Protos.GC2LS_AskLogin {
		let msg = new Protos.GC2LS_AskLogin();
		msg.opts = new Protos.MsgOpts();
		msg.opts.flag |= Protos.MsgOpts.Flag.RPC;
		return msg;
	}

	public static Q_GC2GS_AskLogin(): Protos.GC2GS_AskLogin {
		let msg = new Protos.GC2GS_AskLogin();
		msg.opts = new Protos.MsgOpts();
		msg.opts.flag |= Protos.MsgOpts.Flag.RPC;
		return msg;
	}

	public static Q_GC2GS_KeepAlive(): Protos.GC2GS_KeepAlive {
		let msg = new Protos.GC2GS_KeepAlive();
		msg.opts = new Protos.MsgOpts();
		return msg;
	}

	public static Q_LS2GC_GSInfo(): Protos.LS2GC_GSInfo {
		let msg = new Protos.LS2GC_GSInfo();
		msg.opts = new Protos.MsgOpts();
		return msg;
	}

	public static Q_LS2GC_AskRegRet(): Protos.LS2GC_AskRegRet {
		let msg = new Protos.LS2GC_AskRegRet();
		msg.opts = new Protos.MsgOpts();
		return msg;
	}

	public static Q_LS2GC_AskLoginRet(): Protos.LS2GC_AskLoginRet {
		let msg = new Protos.LS2GC_AskLoginRet();
		msg.opts = new Protos.MsgOpts();
		return msg;
	}

	public static Q_LS2CS_GCLogin(): Protos.LS2CS_GCLogin {
		let msg = new Protos.LS2CS_GCLogin();
		msg.opts = new Protos.MsgOpts();
		msg.opts.flag |= Protos.MsgOpts.Flag.RPC;
		return msg;
	}

	public static Q_LS2DB_QueryAccount(): Protos.LS2DB_QueryAccount {
		let msg = new Protos.LS2DB_QueryAccount();
		msg.opts = new Protos.MsgOpts();
		msg.opts.flag |= Protos.MsgOpts.Flag.RPC;
		return msg;
	}

	public static Q_LS2DB_QueryLogin(): Protos.LS2DB_QueryLogin {
		let msg = new Protos.LS2DB_QueryLogin();
		msg.opts = new Protos.MsgOpts();
		msg.opts.flag |= Protos.MsgOpts.Flag.RPC;
		return msg;
	}

	public static Q_LS2DB_Exec(): Protos.LS2DB_Exec {
		let msg = new Protos.LS2DB_Exec();
		msg.opts = new Protos.MsgOpts();
		msg.opts.flag |= Protos.MsgOpts.Flag.RPC;
		return msg;
	}

	public static Q_GS2CS_ReportState(): Protos.GS2CS_ReportState {
		let msg = new Protos.GS2CS_ReportState();
		msg.opts = new Protos.MsgOpts();
		return msg;
	}

	public static Q_GS2CS_GCAskLogin(): Protos.GS2CS_GCAskLogin {
		let msg = new Protos.GS2CS_GCAskLogin();
		msg.opts = new Protos.MsgOpts();
		msg.opts.flag |= Protos.MsgOpts.Flag.RPC;
		return msg;
	}

	public static Q_GS2CS_GCLost(): Protos.GS2CS_GCLost {
		let msg = new Protos.GS2CS_GCLost();
		msg.opts = new Protos.MsgOpts();
		return msg;
	}

	public static Q_GS2GC_LoginRet(): Protos.GS2GC_LoginRet {
		let msg = new Protos.GS2GC_LoginRet();
		msg.opts = new Protos.MsgOpts();
		return msg;
	}

	public static Q_CS2LS_GSInfos(): Protos.CS2LS_GSInfos {
		let msg = new Protos.CS2LS_GSInfos();
		msg.opts = new Protos.MsgOpts();
		return msg;
	}

	public static Q_CS2LS_GSInfo(): Protos.CS2LS_GSInfo {
		let msg = new Protos.CS2LS_GSInfo();
		msg.opts = new Protos.MsgOpts();
		return msg;
	}

	public static Q_CS2LS_GSLost(): Protos.CS2LS_GSLost {
		let msg = new Protos.CS2LS_GSLost();
		msg.opts = new Protos.MsgOpts();
		return msg;
	}

	public static Q_CS2LS_GCLoginRet(): Protos.CS2LS_GCLoginRet {
		let msg = new Protos.CS2LS_GCLoginRet();
		msg.opts = new Protos.MsgOpts();
		return msg;
	}

	public static Q_CS2GS_GCLoginRet(): Protos.CS2GS_GCLoginRet {
		let msg = new Protos.CS2GS_GCLoginRet();
		msg.opts = new Protos.MsgOpts();
		return msg;
	}

	public static Q_DB2LS_QueryAccountRet(): Protos.DB2LS_QueryAccountRet {
		let msg = new Protos.DB2LS_QueryAccountRet();
		msg.opts = new Protos.MsgOpts();
		return msg;
	}

	public static Q_DB2LS_QueryLoginRet(): Protos.DB2LS_QueryLoginRet {
		let msg = new Protos.DB2LS_QueryLoginRet();
		msg.opts = new Protos.MsgOpts();
		return msg;
	}

	public static Q_DB2LS_ExecRet(): Protos.DB2LS_ExecRet {
		let msg = new Protos.DB2LS_ExecRet();
		msg.opts = new Protos.MsgOpts();
		return msg;
	}


	public static R_G_AskPing(pid: number): Protos.G_AskPingRet {
		let msg = new Protos.G_AskPingRet();
		msg.opts = new Protos.MsgOpts();
		msg.opts.flag |= Protos.MsgOpts.Flag.RESP;
		msg.opts.rpid = pid;
		return msg;
	}

	public static R_LS2CS_GCLogin(pid: number): Protos.CS2LS_GCLoginRet {
		let msg = new Protos.CS2LS_GCLoginRet();
		msg.opts = new Protos.MsgOpts();
		msg.opts.flag |= Protos.MsgOpts.Flag.RESP;
		msg.opts.rpid = pid;
		return msg;
	}

	public static R_GC2LS_AskRegister(pid: number): Protos.LS2GC_AskRegRet {
		let msg = new Protos.LS2GC_AskRegRet();
		msg.opts = new Protos.MsgOpts();
		msg.opts.flag |= Protos.MsgOpts.Flag.RESP;
		msg.opts.rpid = pid;
		return msg;
	}

	public static R_GC2LS_AskLogin(pid: number): Protos.LS2GC_AskLoginRet {
		let msg = new Protos.LS2GC_AskLoginRet();
		msg.opts = new Protos.MsgOpts();
		msg.opts.flag |= Protos.MsgOpts.Flag.RESP;
		msg.opts.rpid = pid;
		return msg;
	}

	public static R_GC2GS_AskLogin(pid: number): Protos.GS2GC_LoginRet {
		let msg = new Protos.GS2GC_LoginRet();
		msg.opts = new Protos.MsgOpts();
		msg.opts.flag |= Protos.MsgOpts.Flag.RESP;
		msg.opts.rpid = pid;
		return msg;
	}

	public static R_GS2CS_GCAskLogin(pid: number): Protos.CS2GS_GCLoginRet {
		let msg = new Protos.CS2GS_GCLoginRet();
		msg.opts = new Protos.MsgOpts();
		msg.opts.flag |= Protos.MsgOpts.Flag.RESP;
		msg.opts.rpid = pid;
		return msg;
	}

	public static R_LS2DB_QueryAccount(pid: number): Protos.DB2LS_QueryAccountRet {
		let msg = new Protos.DB2LS_QueryAccountRet();
		msg.opts = new Protos.MsgOpts();
		msg.opts.flag |= Protos.MsgOpts.Flag.RESP;
		msg.opts.rpid = pid;
		return msg;
	}

	public static R_LS2DB_QueryLogin(pid: number): Protos.DB2LS_QueryLoginRet {
		let msg = new Protos.DB2LS_QueryLoginRet();
		msg.opts = new Protos.MsgOpts();
		msg.opts.flag |= Protos.MsgOpts.Flag.RESP;
		msg.opts.rpid = pid;
		return msg;
	}

	public static R_LS2DB_Exec(pid: number): Protos.DB2LS_ExecRet {
		let msg = new Protos.DB2LS_ExecRet();
		msg.opts = new Protos.MsgOpts();
		msg.opts.flag |= Protos.MsgOpts.Flag.RESP;
		msg.opts.rpid = pid;
		return msg;
	}


	public static DecodeMsg(msgID: Protos.MsgID, data: Uint8Array, size: number): any {
		switch ( msgID ) {
			case 10: {
				let msg = Protos.G_AskPing.decode(data, size);
				return msg;
			}
			case 11: {
				let msg = Protos.G_AskPingRet.decode(data, size);
				return msg;
			}
			case 100: {
				let msg = Protos.GC2LS_AskRegister.decode(data, size);
				return msg;
			}
			case 101: {
				let msg = Protos.GC2LS_AskLogin.decode(data, size);
				return msg;
			}
			case 200: {
				let msg = Protos.GC2GS_AskLogin.decode(data, size);
				return msg;
			}
			case 201: {
				let msg = Protos.GC2GS_KeepAlive.decode(data, size);
				return msg;
			}
			case 300: {
				let msg = Protos.LS2GC_GSInfo.decode(data, size);
				return msg;
			}
			case 301: {
				let msg = Protos.LS2GC_AskRegRet.decode(data, size);
				return msg;
			}
			case 302: {
				let msg = Protos.LS2GC_AskLoginRet.decode(data, size);
				return msg;
			}
			case 400: {
				let msg = Protos.LS2CS_GCLogin.decode(data, size);
				return msg;
			}
			case 500: {
				let msg = Protos.LS2DB_QueryAccount.decode(data, size);
				return msg;
			}
			case 501: {
				let msg = Protos.LS2DB_QueryLogin.decode(data, size);
				return msg;
			}
			case 502: {
				let msg = Protos.LS2DB_Exec.decode(data, size);
				return msg;
			}
			case 600: {
				let msg = Protos.GS2CS_ReportState.decode(data, size);
				return msg;
			}
			case 601: {
				let msg = Protos.GS2CS_GCAskLogin.decode(data, size);
				return msg;
			}
			case 602: {
				let msg = Protos.GS2CS_GCLost.decode(data, size);
				return msg;
			}
			case 700: {
				let msg = Protos.GS2GC_LoginRet.decode(data, size);
				return msg;
			}
			case 800: {
				let msg = Protos.CS2LS_GSInfos.decode(data, size);
				return msg;
			}
			case 801: {
				let msg = Protos.CS2LS_GSInfo.decode(data, size);
				return msg;
			}
			case 802: {
				let msg = Protos.CS2LS_GSLost.decode(data, size);
				return msg;
			}
			case 803: {
				let msg = Protos.CS2LS_GCLoginRet.decode(data, size);
				return msg;
			}
			case 900: {
				let msg = Protos.CS2GS_GCLoginRet.decode(data, size);
				return msg;
			}
			case 20000: {
				let msg = Protos.DB2LS_QueryAccountRet.decode(data, size);
				return msg;
			}
			case 20001: {
				let msg = Protos.DB2LS_QueryLoginRet.decode(data, size);
				return msg;
			}
			case 20002: {
				let msg = Protos.DB2LS_ExecRet.decode(data, size);
				return msg;
			}
		}
		return null;
	}

	public static D_G_AskPing(data: Uint8Array, size: number): Protos.G_AskPing {
		let msg = Protos.G_AskPing.decode(data, size);
		return msg;
	}

	public static D_G_AskPingRet(data: Uint8Array, size: number): Protos.G_AskPingRet {
		let msg = Protos.G_AskPingRet.decode(data, size);
		return msg;
	}

	public static D_GC2LS_AskRegister(data: Uint8Array, size: number): Protos.GC2LS_AskRegister {
		let msg = Protos.GC2LS_AskRegister.decode(data, size);
		return msg;
	}

	public static D_GC2LS_AskLogin(data: Uint8Array, size: number): Protos.GC2LS_AskLogin {
		let msg = Protos.GC2LS_AskLogin.decode(data, size);
		return msg;
	}

	public static D_GC2GS_AskLogin(data: Uint8Array, size: number): Protos.GC2GS_AskLogin {
		let msg = Protos.GC2GS_AskLogin.decode(data, size);
		return msg;
	}

	public static D_GC2GS_KeepAlive(data: Uint8Array, size: number): Protos.GC2GS_KeepAlive {
		let msg = Protos.GC2GS_KeepAlive.decode(data, size);
		return msg;
	}

	public static D_LS2GC_GSInfo(data: Uint8Array, size: number): Protos.LS2GC_GSInfo {
		let msg = Protos.LS2GC_GSInfo.decode(data, size);
		return msg;
	}

	public static D_LS2GC_AskRegRet(data: Uint8Array, size: number): Protos.LS2GC_AskRegRet {
		let msg = Protos.LS2GC_AskRegRet.decode(data, size);
		return msg;
	}

	public static D_LS2GC_AskLoginRet(data: Uint8Array, size: number): Protos.LS2GC_AskLoginRet {
		let msg = Protos.LS2GC_AskLoginRet.decode(data, size);
		return msg;
	}

	public static D_LS2CS_GCLogin(data: Uint8Array, size: number): Protos.LS2CS_GCLogin {
		let msg = Protos.LS2CS_GCLogin.decode(data, size);
		return msg;
	}

	public static D_LS2DB_QueryAccount(data: Uint8Array, size: number): Protos.LS2DB_QueryAccount {
		let msg = Protos.LS2DB_QueryAccount.decode(data, size);
		return msg;
	}

	public static D_LS2DB_QueryLogin(data: Uint8Array, size: number): Protos.LS2DB_QueryLogin {
		let msg = Protos.LS2DB_QueryLogin.decode(data, size);
		return msg;
	}

	public static D_LS2DB_Exec(data: Uint8Array, size: number): Protos.LS2DB_Exec {
		let msg = Protos.LS2DB_Exec.decode(data, size);
		return msg;
	}

	public static D_GS2CS_ReportState(data: Uint8Array, size: number): Protos.GS2CS_ReportState {
		let msg = Protos.GS2CS_ReportState.decode(data, size);
		return msg;
	}

	public static D_GS2CS_GCAskLogin(data: Uint8Array, size: number): Protos.GS2CS_GCAskLogin {
		let msg = Protos.GS2CS_GCAskLogin.decode(data, size);
		return msg;
	}

	public static D_GS2CS_GCLost(data: Uint8Array, size: number): Protos.GS2CS_GCLost {
		let msg = Protos.GS2CS_GCLost.decode(data, size);
		return msg;
	}

	public static D_GS2GC_LoginRet(data: Uint8Array, size: number): Protos.GS2GC_LoginRet {
		let msg = Protos.GS2GC_LoginRet.decode(data, size);
		return msg;
	}

	public static D_CS2LS_GSInfos(data: Uint8Array, size: number): Protos.CS2LS_GSInfos {
		let msg = Protos.CS2LS_GSInfos.decode(data, size);
		return msg;
	}

	public static D_CS2LS_GSInfo(data: Uint8Array, size: number): Protos.CS2LS_GSInfo {
		let msg = Protos.CS2LS_GSInfo.decode(data, size);
		return msg;
	}

	public static D_CS2LS_GSLost(data: Uint8Array, size: number): Protos.CS2LS_GSLost {
		let msg = Protos.CS2LS_GSLost.decode(data, size);
		return msg;
	}

	public static D_CS2LS_GCLoginRet(data: Uint8Array, size: number): Protos.CS2LS_GCLoginRet {
		let msg = Protos.CS2LS_GCLoginRet.decode(data, size);
		return msg;
	}

	public static D_CS2GS_GCLoginRet(data: Uint8Array, size: number): Protos.CS2GS_GCLoginRet {
		let msg = Protos.CS2GS_GCLoginRet.decode(data, size);
		return msg;
	}

	public static D_DB2LS_QueryAccountRet(data: Uint8Array, size: number): Protos.DB2LS_QueryAccountRet {
		let msg = Protos.DB2LS_QueryAccountRet.decode(data, size);
		return msg;
	}

	public static D_DB2LS_QueryLoginRet(data: Uint8Array, size: number): Protos.DB2LS_QueryLoginRet {
		let msg = Protos.DB2LS_QueryLoginRet.decode(data, size);
		return msg;
	}

	public static D_DB2LS_ExecRet(data: Uint8Array, size: number): Protos.DB2LS_ExecRet {
		let msg = Protos.DB2LS_ExecRet.decode(data, size);
		return msg;
	}


	public static CreateMsgByID(msgID:Protos.MsgID): any {
		switch ( msgID ) {
			case 10: {
				return new Protos.G_AskPing();
			}
			case 11: {
				return new Protos.G_AskPingRet();
			}
			case 100: {
				return new Protos.GC2LS_AskRegister();
			}
			case 101: {
				return new Protos.GC2LS_AskLogin();
			}
			case 200: {
				return new Protos.GC2GS_AskLogin();
			}
			case 201: {
				return new Protos.GC2GS_KeepAlive();
			}
			case 300: {
				return new Protos.LS2GC_GSInfo();
			}
			case 301: {
				return new Protos.LS2GC_AskRegRet();
			}
			case 302: {
				return new Protos.LS2GC_AskLoginRet();
			}
			case 400: {
				return new Protos.LS2CS_GCLogin();
			}
			case 500: {
				return new Protos.LS2DB_QueryAccount();
			}
			case 501: {
				return new Protos.LS2DB_QueryLogin();
			}
			case 502: {
				return new Protos.LS2DB_Exec();
			}
			case 600: {
				return new Protos.GS2CS_ReportState();
			}
			case 601: {
				return new Protos.GS2CS_GCAskLogin();
			}
			case 602: {
				return new Protos.GS2CS_GCLost();
			}
			case 700: {
				return new Protos.GS2GC_LoginRet();
			}
			case 800: {
				return new Protos.CS2LS_GSInfos();
			}
			case 801: {
				return new Protos.CS2LS_GSInfo();
			}
			case 802: {
				return new Protos.CS2LS_GSLost();
			}
			case 803: {
				return new Protos.CS2LS_GCLoginRet();
			}
			case 900: {
				return new Protos.CS2GS_GCLoginRet();
			}
			case 20000: {
				return new Protos.DB2LS_QueryAccountRet();
			}
			case 20001: {
				return new Protos.DB2LS_QueryLoginRet();
			}
			case 20002: {
				return new Protos.DB2LS_ExecRet();
			}
		}
		return null;
	}

	public static GetMsgOpts(message: any): Protos.IMsgOpts {
		let msgID = ProtoCreator.GetMsgID(message);
		switch ( msgID ) {
			case 10: {
				return (<Protos.G_AskPing>message).opts;
			}
			case 11: {
				return (<Protos.G_AskPingRet>message).opts;
			}
			case 100: {
				return (<Protos.GC2LS_AskRegister>message).opts;
			}
			case 101: {
				return (<Protos.GC2LS_AskLogin>message).opts;
			}
			case 200: {
				return (<Protos.GC2GS_AskLogin>message).opts;
			}
			case 201: {
				return (<Protos.GC2GS_KeepAlive>message).opts;
			}
			case 300: {
				return (<Protos.LS2GC_GSInfo>message).opts;
			}
			case 301: {
				return (<Protos.LS2GC_AskRegRet>message).opts;
			}
			case 302: {
				return (<Protos.LS2GC_AskLoginRet>message).opts;
			}
			case 400: {
				return (<Protos.LS2CS_GCLogin>message).opts;
			}
			case 500: {
				return (<Protos.LS2DB_QueryAccount>message).opts;
			}
			case 501: {
				return (<Protos.LS2DB_QueryLogin>message).opts;
			}
			case 502: {
				return (<Protos.LS2DB_Exec>message).opts;
			}
			case 600: {
				return (<Protos.GS2CS_ReportState>message).opts;
			}
			case 601: {
				return (<Protos.GS2CS_GCAskLogin>message).opts;
			}
			case 602: {
				return (<Protos.GS2CS_GCLost>message).opts;
			}
			case 700: {
				return (<Protos.GS2GC_LoginRet>message).opts;
			}
			case 800: {
				return (<Protos.CS2LS_GSInfos>message).opts;
			}
			case 801: {
				return (<Protos.CS2LS_GSInfo>message).opts;
			}
			case 802: {
				return (<Protos.CS2LS_GSLost>message).opts;
			}
			case 803: {
				return (<Protos.CS2LS_GCLoginRet>message).opts;
			}
			case 900: {
				return (<Protos.CS2GS_GCLoginRet>message).opts;
			}
			case 20000: {
				return (<Protos.DB2LS_QueryAccountRet>message).opts;
			}
			case 20001: {
				return (<Protos.DB2LS_QueryLoginRet>message).opts;
			}
			case 20002: {
				return (<Protos.DB2LS_ExecRet>message).opts;
			}
		}
		return null;
	}

	public static GetMsgIDByType(type: new () => any): Protos.MsgID { return ProtoCreator._TYPE2ID.get(type); }

	public static GetMsgID(message: any): Protos.MsgID { return ProtoCreator._TYPE2ID.get(message.constructor); }

} //end class
