// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Global.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Protos {

  /// <summary>Holder for reflection information generated from Global.proto</summary>
  public static partial class GlobalReflection {

    #region Descriptor
    /// <summary>File descriptor for Global.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GlobalReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxHbG9iYWwucHJvdG8SBlByb3RvcyJOCgdNc2dPcHRzEgsKA3BpZBgBIAEo",
            "DRILCgNycGMYAiABKAgSDAoEcnBpZBgDIAEoDRINCgV0cmFucxgFIAEoCBIM",
            "CgRuc2lkGAYgASgNKsABCgVNc2dJRBIMCghVbmRlZmluZRAAEhYKEmVHQzJM",
            "U19Bc2tSZWdpc3RlchBkEhMKD2VHQzJMU19Bc2tMb2dpbhBlEhIKDWVMUzJH",
            "Q19SZXN1bHQQyAESEgoNZUxTMkdDX0dTSW5mbxDJARIXChJlR1MyQ1NfUmVw",
            "b3J0U3RhdGUQrAISEwoOZUNTMkxTX0dTSW5mb3MQkAMSEgoNZUNTMkxTX0dT",
            "SW5mbxCRAxISCg1lQ1MyTFNfR1NMb3N0EJIDYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Protos.MsgID), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Protos.MsgOpts), global::Protos.MsgOpts.Parser, new[]{ "Pid", "Rpc", "Rpid", "Trans", "Nsid" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum MsgID {
    [pbr::OriginalName("Undefine")] Undefine = 0,
    [pbr::OriginalName("eGC2LS_AskRegister")] EGc2LsAskRegister = 100,
    [pbr::OriginalName("eGC2LS_AskLogin")] EGc2LsAskLogin = 101,
    [pbr::OriginalName("eLS2GC_Result")] ELs2GcResult = 200,
    [pbr::OriginalName("eLS2GC_GSInfo")] ELs2GcGsinfo = 201,
    [pbr::OriginalName("eGS2CS_ReportState")] EGs2CsReportState = 300,
    [pbr::OriginalName("eCS2LS_GSInfos")] ECs2LsGsinfos = 400,
    [pbr::OriginalName("eCS2LS_GSInfo")] ECs2LsGsinfo = 401,
    [pbr::OriginalName("eCS2LS_GSLost")] ECs2LsGslost = 402,
  }

  #endregion

  #region Messages
  public sealed partial class MsgOpts : pb::IMessage<MsgOpts> {
    private static readonly pb::MessageParser<MsgOpts> _parser = new pb::MessageParser<MsgOpts>(() => new MsgOpts());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MsgOpts> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protos.GlobalReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgOpts() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgOpts(MsgOpts other) : this() {
      pid_ = other.pid_;
      rpc_ = other.rpc_;
      rpid_ = other.rpid_;
      trans_ = other.trans_;
      nsid_ = other.nsid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgOpts Clone() {
      return new MsgOpts(this);
    }

    /// <summary>Field number for the "pid" field.</summary>
    public const int PidFieldNumber = 1;
    private uint pid_;
    /// <summary>
    ///运行时消息pid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Pid {
      get { return pid_; }
      set {
        pid_ = value;
      }
    }

    /// <summary>Field number for the "rpc" field.</summary>
    public const int RpcFieldNumber = 2;
    private bool rpc_;
    /// <summary>
    ///是否rpc消息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Rpc {
      get { return rpc_; }
      set {
        rpc_ = value;
      }
    }

    /// <summary>Field number for the "rpid" field.</summary>
    public const int RpidFieldNumber = 3;
    private uint rpid_;
    /// <summary>
    ///回应对应请求的消息的pid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Rpid {
      get { return rpid_; }
      set {
        rpid_ = value;
      }
    }

    /// <summary>Field number for the "trans" field.</summary>
    public const int TransFieldNumber = 5;
    private bool trans_;
    /// <summary>
    ///是否一条转发消息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Trans {
      get { return trans_; }
      set {
        trans_ = value;
      }
    }

    /// <summary>Field number for the "nsid" field.</summary>
    public const int NsidFieldNumber = 6;
    private uint nsid_;
    /// <summary>
    ///转发的网络id(暂时只会转发到客户端)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Nsid {
      get { return nsid_; }
      set {
        nsid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MsgOpts);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MsgOpts other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Pid != other.Pid) return false;
      if (Rpc != other.Rpc) return false;
      if (Rpid != other.Rpid) return false;
      if (Trans != other.Trans) return false;
      if (Nsid != other.Nsid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Pid != 0) hash ^= Pid.GetHashCode();
      if (Rpc != false) hash ^= Rpc.GetHashCode();
      if (Rpid != 0) hash ^= Rpid.GetHashCode();
      if (Trans != false) hash ^= Trans.GetHashCode();
      if (Nsid != 0) hash ^= Nsid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Pid != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Pid);
      }
      if (Rpc != false) {
        output.WriteRawTag(16);
        output.WriteBool(Rpc);
      }
      if (Rpid != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Rpid);
      }
      if (Trans != false) {
        output.WriteRawTag(40);
        output.WriteBool(Trans);
      }
      if (Nsid != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Nsid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Pid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Pid);
      }
      if (Rpc != false) {
        size += 1 + 1;
      }
      if (Rpid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Rpid);
      }
      if (Trans != false) {
        size += 1 + 1;
      }
      if (Nsid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Nsid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MsgOpts other) {
      if (other == null) {
        return;
      }
      if (other.Pid != 0) {
        Pid = other.Pid;
      }
      if (other.Rpc != false) {
        Rpc = other.Rpc;
      }
      if (other.Rpid != 0) {
        Rpid = other.Rpid;
      }
      if (other.Trans != false) {
        Trans = other.Trans;
      }
      if (other.Nsid != 0) {
        Nsid = other.Nsid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Pid = input.ReadUInt32();
            break;
          }
          case 16: {
            Rpc = input.ReadBool();
            break;
          }
          case 24: {
            Rpid = input.ReadUInt32();
            break;
          }
          case 40: {
            Trans = input.ReadBool();
            break;
          }
          case 48: {
            Nsid = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
