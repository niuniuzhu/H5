syntax = "proto3";
package CSToRC;

enum MsgID
{
	unknow = 0;
	eMsgCS2RC_Begin = 33500;
	eMsgCS2RC_AskRegistRsp = 33501;
	eMsgCS2RC_AllServerInfo = 33502;
	eMsgCS2RC_ServerUserInfo = 33503;
	eMsgCS2RC_AllNoticeInfo = 33504;
	eMsgCS2RC_AddNoticeResp = 33505;
	eMsgCS2RC_DeleteNoticeResp = 33506;
	eMsgCS2RC_AskAddOneMailResp = 33507;
	eMsgCS2RC_AskQueryCDkeyResp = 33508; 
	
	eMsgCS2RC_End = 33999;
}
 

//eMsgCS2CS_AskQueryCDkeyResp
message QueryCDkeyInfoResp
{
	MsgID msgid = 1;
	message CDKey_Info
	{
		int32 id = 1;
		string title = 2;
		int32 platform = 3;
		int64 end_tiem = 4;
		int32 code_num = 5;
		int32 code_len = 6;
		int32 type = 7;
	}
	repeated CDKey_Info info = 2;
}

//eMsgCS2CS_AskAddOneMailResp
message AddMailResp
{
	MsgID msgid = 1;
	bool rst = 2;
}

message AskRegistRsp
{
	MsgID msgid = 1;
	bool rst = 2;
}

message AllServerInfo
{
	MsgID msgid = 1;
	bytes  servername = 2;
	int32	roomUserNum = 3;
	int32	battleUserNum = 4;
	float	loadFactory = 5; 
	int32	allUserNum = 6;
	string	curttime = 7;	 
}


message ServerUserInfo
{
	MsgID msgid = 1;
	int32	allUserNum = 2;
}

message NoticeInfo
{
	bytes notice = 1;
}

message AllNoticeInfo
{
	MsgID msgid = 1;
	repeated NoticeInfo	notices = 2;
}

message AddNoticeResp
{
	MsgID msgid = 1;
	bool rst = 2;
}

message DeleteNoticeResp
{
	MsgID msgid = 1;
	bool rst = 2;
}